// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/monitors": {
            "get": {
                "description": "get a list of all monitors configured in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "List all monitors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/monitor.Monitor"
                            }
                        }
                    }
                }
            }
        },
        "/monitors/{monitorID}/checks": {
            "get": {
                "description": "get detailed time-series data for a monitor within a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Get monitor checks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Monitor ID",
                        "name": "monitorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time range preset (e.g., '1h', '24h', '7d', '30d'). Default is '24h'.",
                        "name": "range",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time as a Unix timestamp. Overrides 'range'.",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time as a Unix timestamp. Defaults to now.",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/monitor.MonitorLogEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/monitors/{monitorID}/summary": {
            "get": {
                "description": "get a high-level summary of a single monitor's performance over the last 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Get a monitor summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Monitor ID",
                        "name": "monitorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/monitor.MonitorSummary"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "monitor.Monitor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "monitor.MonitorLogEntry": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "time": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "monitor.MonitorSummary": {
            "type": "object",
            "properties": {
                "average_response_time_24h": {
                    "type": "number"
                },
                "current_status": {
                    "type": "string"
                },
                "uptime_percentage_24h": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Guptime API",
	Description:      "An API for monitoring website uptime and performance.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
